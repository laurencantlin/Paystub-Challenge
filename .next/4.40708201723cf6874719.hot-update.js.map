{"version":3,"file":"4.40708201723cf6874719.hot-update.js","sources":["webpack:///components/Form.js"],"sourcesContent":["import Link from 'next/link'\nimport { Form, Icon, Input, Button } from 'antd';\n// import 'antd/lib/form/style/css';        // for css\nconst FormItem = Form.Item;\n\nfunction hasErrors(fieldsError) {\n  return Object.keys(fieldsError).some(field => fieldsError[field]);\n}\n\nclass EmployeeForm extends React.Component {\n  componentDidMount() {\n    // To disabled submit button at the beginning.\n    this.props.form.validateFields();\n  }\n  handleSubmit = (e) => {\n    e.preventDefault();\n    this.props.form.validateFields((err, values) => {\n      if (!err) {\n        console.log('Received values of form: ', values);\n      }\n    });\n  }\n  render() {\n    const { getFieldDecorator, getFieldsError, getFieldError, isFieldTouched } = this.props.form;\n\n    // Only show error after a field is touched.\n    const userNameError = isFieldTouched('userName') && getFieldError('userName');\n    const passwordError = isFieldTouched('password') && getFieldError('password');\n    return (\n      <Form layout=\"inline\" onSubmit={this.handleSubmit}>\n        <FormItem className=\"field \" \n          validateStatus={userNameError ? 'error' : ''}\n          help={userNameError || ''}\n        >\n          {getFieldDecorator('userName', {\n            rules: [{ required: true, message: 'Please input your username!' }],\n          })(\n            <Input prefix={<Icon type=\"user\" style={{ color: 'rgba(0,0,0,.25)' }} />} placeholder=\"Username\" />\n          )}\n        </FormItem>\n        <FormItem\n          validateStatus={passwordError ? 'error' : ''}\n          help={passwordError || ''}\n        >\n          {getFieldDecorator('password', {\n            rules: [{ required: true, message: 'Please input your Password!' }],\n          })(\n            <Input prefix={<Icon type=\"lock\" style={{ color: 'rgba(0,0,0,.25)' }} />} type=\"password\" placeholder=\"Password\" />\n          )}\n        </FormItem>\n        <FormItem>\n          <Button\n            type=\"primary\"\n            htmlType=\"submit\"\n            disabled={hasErrors(getFieldsError())}\n          >\n            Log in\n          </Button>\n        </FormItem>\n      </Form>\n    );\n  }\n}\n\nconst WrappedHorizontalLoginForm = Form.create()(EmployeeForm);\n\n// ReactDOM.render(<WrappedHorizontalLoginForm />, mountNode);\n\nexport default WrappedHorizontalLoginForm\n\n\n// WEBPACK FOOTER //\n// components/Form.js"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;AAKA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;;;;;;AAXA;AACA;AACA;AACA;;;AASA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAGA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AADA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AADA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAUA;;;;;;;;;;;AApDA;AACA;AAsDA;AACA;AAGA;AAAA;;;;;;;;;;;;AAjEA;AAEA;AAIA;AAuDA;;;;;;;;;;A","sourceRoot":""}