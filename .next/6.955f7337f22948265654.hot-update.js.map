{"version":3,"file":"6.955f7337f22948265654.hot-update.js","sources":["webpack:///components/Form.js"],"sourcesContent":["import Link from 'next/link'\nimport {Row, Button, Input} from 'react-materialize'\nimport MyContext from '../config/Context';\n// import MyProvider from '../provider/ContextProvider'\nimport Router from 'next/router'\n\nclass EmployeeForm extends React.Component {\n    state={     \n      name:null,\n      fn: null,\n      ln: null,    \n      AnnualSalary: null,\n      Super: null,       \n      PeriodStart: null,     \n    }\n  componentDidMount() {\n    // console.log(\"form component mounted\")\n  }\n\n  componentDidUpdate() {\n    console.log(\"Form component updated:\", this.state )\n    // this.calculatePaystub()\n  }\n\n  handleSubmit=(event, value, setName)=> {\n    event.preventDefault();\n    Router.push('/Paystub')\n\n    // if(this.state.fn&&this.state.ln&&this.state.AnnualSalary&&this.state.Super&&this.state.PeriodStart){\n    //   console.log(this.state, \"sub\")\n    //   event.preventDefault();\n    //  Router.push('/Paystub')\n    // }\n    // else{alert(\"fill out all fields\")}\n  }\n \n  // calculatePaystub = () => {\n  //   console.log(\"calc\",this.state)\n  //   return <div>hi</div>\n\n  // }\n  handlefnChange = (value, setFN) => {\n    // console.log(e.target.value)\n    this.setState({\n      fn: value\n    }, () => setFN(this.state.fn))\n  }\n  handlelnChange = (value, setLN) => {\n    // console.log(e.target.value)\n    this.setState({\n      ln: value\n    }, () => setLN(this.state.ln))\n  }\n  handleAnnualSalaryChange = (value, setAnnualSalary) => {\n    // console.log(e.target.value)\n    this.setState({\n      AnnualSalary: value\n    }, () => setAnnualSalary(this.state.AnnualSalary))\n  }\n  handleSuperChange = (value, setSuper) => {\n    // console.log(e.target.value)\n    this.setState({\n      Super: value\n    }, () => setSuper(this.state.Super))\n  }\n  handlePeriodStartChange = (value, setPeriodStart) => {\n    // console.log(e.target.value)\n    this.setState({\n      PeriodStart: value\n    }, () => setPeriodStart(this.state.PeriodStart))\n  }\n  render() {\n\n    return (\n      <MyContext.Consumer>\n        {/* <div className=\"form\"> */}\n          {(context) => (\n              <React.Fragment>\n                <div>\n                  {/* fn: {context.fn} ,<br/>\n                  ln: {context.state.ln} ,<br/>\n                  AnnualSalary: {context.state.AnnualSalary} ,<br/>\n                  Super: {context.state.Super} ,<br/>\n                  PeriodStart: {context.state.PeriodStart} ,<br/>\n                  age {context.state.age}\n                  <Button onClick={context.methods.increaseAge}>ðŸ”¼</Button>\n                  {/* {({submitForm}) => ( */\n                } \n                < form  onSubmit = {\n                  this.handleSubmit\n                } > \n                <Row>\n                  <Input placeholder=\"John\" required value=\"john\"\t s={12} onChange= {event => this.handlefnChange(event.target.value, context.methods.setFN)}label=\"First Name\"/>\n                  <Input placeholder=\"Smith\" required\tvalue=\"smith\" s={12} label=\"Last Name\" onChange= {event => this.handlelnChange(event.target.value, context.methods.setLN)}/>\n                  <Input required\t s={12} type =\"number\" value ='50000' step='5000' label=\"Annual Salary\" placeholder=\"$\" onChange= {event => this.handleAnnualSalaryChange(event.target.value, context.methods.setAnnualSalary)}/>\n                  <Input required\t label=\"Super Rate\" type=\"number\" s={12} min='0' max='12'placeholder=\"%\" step=\"1\" maxlenth='2' onChange= {event => this.handleSuperChange(event.target.value, context.methods.setSuper)}/>\n                  <Input required\t\n                    placeholder=\"Pick Date\"\n                    type=\"date\" \n                    label=\"Pay Period Start Date\"\n                    s={12}\n                    onChange= {event => this.handlePeriodStartChange(event.target.value, context.methods.setPeriodStart)}/>\n\n                  <Button  type=\"submit\"  onSubmit={(event) => this.handleSubmit(event, event.target.value, context.methods.setName)} waves='light'>Submit</Button>\n                  {/* <Input */}\n                    {/* type=\"text\"\n                    value={this.state.input}\n                    onChange={event => this.handleKeyPress(event.target.value, context.methods.setName)}\n                    placeholder=\"Change name...\"/>  */}\n\n                </Row> \n                </form>\n              \n                </div>\n\n              </React.Fragment>\n            )}\n  {/* </div>   */}\n      </MyContext.Consumer>\n    );\n  }\n}\n\nexport default EmployeeForm\n\n\n// WEBPACK FOOTER //\n// components/Form.js"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;;;;;AAiBA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;;;;;AAOA;AACA;AACA;AACA;AADA;AAEA;AAAA;AACA;;;;;AACA;AACA;AACA;AACA;AADA;AAEA;AAAA;AACA;;;;;AACA;AACA;AACA;AACA;AADA;AAEA;AAAA;AACA;;;;;AACA;AACA;AACA;AACA;AADA;AAEA;AAAA;AACA;;;;;AACA;AACA;AACA;AACA;AADA;AAEA;AAAA;AACA;;;;;;AAvDA;AAEA;;;AAEA;AACA;AAEA;;;AAiDA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAUA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AALA;AAAA;AAAA;AAAA;AAAA;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AA3BA;AA4CA;;;;;;;;;;;AAlHA;AACA;AAoHA;AAAA;;;;;;;;;;;;AArHA;;;;;;;;;;A","sourceRoot":""}